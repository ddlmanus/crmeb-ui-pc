<template>
  <div class="order-confirm">
    <div class="container">
      <div class="page-header">
        <h2>确认订单</h2>
      </div>

      <!-- 收货地址 -->
      <div class="section address-section">
        <div class="section-title">
          <i class="el-icon-location"></i>
          收货地址
        </div>
        <div class="address-content">
          <div v-if="selectedAddress" class="address-item selected">
            <div class="address-info">
              <div class="user-info">
                <span class="name">{{ selectedAddress.realName }}</span>
                <span class="phone">{{ selectedAddress.phone }}</span>
                <span v-if="selectedAddress.isDefault" class="default-tag">默认</span>
              </div>
              <div class="address-detail">
                {{ selectedAddress.province }} {{ selectedAddress.city }} {{ selectedAddress.district }} {{ selectedAddress.detail }}
              </div>
            </div>
            <div class="address-action">
              <el-button type="text" @click="showAddressList = true">更换地址</el-button>
            </div>
          </div>
          <div v-else class="no-address">
            <i class="el-icon-warning"></i>
            <span>请选择收货地址</span>
            <el-button type="primary" @click="showAddressList = true">选择地址</el-button>
          </div>
        </div>
      </div>

      <!-- 商品信息 -->
      <div class="section goods-section">
        <div class="section-title">
          <i class="el-icon-goods"></i>
          商品信息
        </div>
        <div class="goods-list">
          <div v-for="item in orderGoods" :key="item.id" class="goods-item">
            <img :src="item.productInfo.image" :alt="item.productInfo.storeName" />
            <div class="goods-info">
              <h4>{{ item.productInfo.storeName }}</h4>
              <div class="goods-specs" v-if="item.productInfo.attrInfo">
                {{ item.productInfo.attrInfo.suk }}
              </div>
              <div class="goods-price">¥{{ item.truePrice }} × {{ item.cartNum }}</div>
            </div>
            <div class="goods-total">¥{{ (item.truePrice * item.cartNum).toFixed(2) }}</div>
          </div>
        </div>
      </div>

      <!-- 优惠券 -->
      <div class="section coupon-section">
        <div class="section-title">
          <i class="el-icon-ticket"></i>
          优惠券
        </div>
        <div class="coupon-content">
          <div class="coupon-selector" @click="showCouponList = true">
            <span v-if="selectedCoupon">{{ selectedCoupon.title }} -¥{{ selectedCoupon.couponPrice }}</span>
            <span v-else class="placeholder">选择优惠券</span>
            <i class="el-icon-arrow-right"></i>
          </div>
        </div>
      </div>

      <!-- 配送方式 -->
      <div class="section delivery-section">
        <div class="section-title">
          <i class="el-icon-truck"></i>
          配送方式
        </div>
        <div class="delivery-options">
          <el-radio-group v-model="deliveryType">
            <el-radio :label="1">快递配送 +¥{{ shippingFee }}</el-radio>
            <el-radio :label="2">到店自提 免费</el-radio>
          </el-radio-group>
        </div>
      </div>

      <!-- 支付方式 -->
      <div class="section payment-section">
        <div class="section-title">
          <i class="el-icon-wallet"></i>
          支付方式
        </div>
        <div class="payment-options">
          <el-radio-group v-model="payType">
            <div class="payment-item">
              <el-radio :label="'weixin'">
                <div class="payment-info">
                  <i class="payment-icon wechat"></i>
                  <span>微信支付</span>
                </div>
              </el-radio>
            </div>
            <div class="payment-item">
              <el-radio :label="'alipay'">
                <div class="payment-info">
                  <i class="payment-icon alipay"></i>
                  <span>支付宝</span>
                </div>
              </el-radio>
            </div>
            <div class="payment-item">
              <el-radio :label="'yue'">
                <div class="payment-info">
                  <i class="payment-icon balance"></i>
                  <span>余额支付（余额：¥{{ userInfo.nowMoney || 0 }}）</span>
                </div>
              </el-radio>
            </div>
          </el-radio-group>
        </div>
      </div>

      <!-- 订单备注 -->
      <div class="section remark-section">
        <div class="section-title">
          <i class="el-icon-edit"></i>
          订单备注
        </div>
        <el-input
          v-model="remark"
          type="textarea"
          :rows="3"
          placeholder="请输入订单备注（选填）"
          maxlength="200"
          show-word-limit
        ></el-input>
      </div>

      <!-- 费用明细 -->
      <div class="section total-section">
        <div class="total-list">
          <div class="total-item">
            <span>商品金额</span>
            <span>¥{{ totalPrice }}</span>
          </div>
          <div class="total-item">
            <span>运费</span>
            <span>¥{{ deliveryType === 1 ? shippingFee : '0.00' }}</span>
          </div>
          <div class="total-item" v-if="selectedCoupon">
            <span>优惠券</span>
            <span class="discount">-¥{{ selectedCoupon.couponPrice }}</span>
          </div>
          <div class="total-item final">
            <span>应付金额</span>
            <span class="amount">¥{{ finalPrice }}</span>
          </div>
        </div>
      </div>

      <!-- 提交订单 -->
      <div class="submit-section">
        <div class="submit-info">
          <div class="total-amount">
            合计：<span>¥{{ finalPrice }}</span>
          </div>
        </div>
        <el-button 
          type="primary" 
          size="large" 
          :loading="submitting"
          @click="submitOrder"
        >
          提交订单
        </el-button>
      </div>
    </div>

    <!-- 地址列表弹窗 -->
    <el-dialog title="选择收货地址" :visible.sync="showAddressList" width="600px">
      <div class="address-list">
        <div 
          v-for="address in addressList" 
          :key="address.id"
          class="address-item"
          :class="{ selected: selectedAddress && selectedAddress.id === address.id }"
          @click="selectAddress(address)"
        >
          <div class="address-info">
            <div class="user-info">
              <span class="name">{{ address.realName }}</span>
              <span class="phone">{{ address.phone }}</span>
              <span v-if="address.isDefault" class="default-tag">默认</span>
            </div>
            <div class="address-detail">
              {{ address.province }} {{ address.city }} {{ address.district }} {{ address.detail }}
            </div>
          </div>
          <div class="address-action">
            <i v-if="selectedAddress && selectedAddress.id === address.id" class="el-icon-check"></i>
          </div>
        </div>
        <div class="add-address" @click="addNewAddress">
          <i class="el-icon-plus"></i>
          <span>添加新地址</span>
        </div>
      </div>
    </el-dialog>

    <!-- 优惠券列表弹窗 -->
    <el-dialog title="选择优惠券" :visible.sync="showCouponList" width="600px">
      <div class="coupon-list">
        <div 
          v-for="coupon in availableCoupons" 
          :key="coupon.id"
          class="coupon-item"
          :class="{ selected: selectedCoupon && selectedCoupon.id === coupon.id }"
          @click="selectCoupon(coupon)"
        >
          <div class="coupon-left">
            <div class="coupon-price">¥{{ coupon.couponPrice }}</div>
            <div class="coupon-condition">满{{ coupon.useMinPrice }}元可用</div>
          </div>
          <div class="coupon-right">
            <div class="coupon-title">{{ coupon.title }}</div>
            <div class="coupon-time">有效期至：{{ coupon.endTime }}</div>
          </div>
          <div class="coupon-action">
            <i v-if="selectedCoupon && selectedCoupon.id === coupon.id" class="el-icon-check"></i>
          </div>
        </div>
        <div class="no-coupon" @click="selectCoupon(null)">
          <span>不使用优惠券</span>
          <i v-if="!selectedCoupon" class="el-icon-check"></i>
        </div>
      </div>
    </el-dialog>
  </div>
</template>

<script>
import { 
  getOrderPre, 
  createOrder, 
  getUserAddressList, 
  getAvailableCoupons 
} from '@/api/order'

export default {
  name: 'OrderConfirm',
  data() {
    return {
      orderGoods: [],
      addressList: [],
      selectedAddress: null,
      availableCoupons: [],
      selectedCoupon: null,
      deliveryType: 1, // 1-快递配送 2-到店自提
      payType: 'weixin',
      remark: '',
      shippingFee: 0,
      totalPrice: 0,
      userInfo: {},
      submitting: false,
      showAddressList: false,
      showCouponList: false
    }
  },
  computed: {
    finalPrice() {
      let price = parseFloat(this.totalPrice)
      
      // 加运费
      if (this.deliveryType === 1) {
        price += parseFloat(this.shippingFee)
      }
      
      // 减优惠券
      if (this.selectedCoupon) {
        price -= parseFloat(this.selectedCoupon.couponPrice)
      }
      
      return Math.max(0, price).toFixed(2)
    }
  },
  created() {
    this.initOrderData()
  },
  methods: {
    async initOrderData() {
      try {
        // 获取订单预览数据
        const params = {}
        if (this.$route.query.cartIds) {
          params.cartIds = this.$route.query.cartIds
        } else if (this.$route.query.productId) {
          params.productId = this.$route.query.productId
          params.quantity = this.$route.query.quantity
          params.uniqueId = this.$route.query.uniqueId
        }
        
        const { data } = await getOrderPre(params)
        this.orderGoods = data.cartInfo
        this.totalPrice = data.totalPrice
        this.shippingFee = data.shippingFee
        this.userInfo = data.userInfo
        
        // 获取地址列表
        await this.fetchAddressList()
        
        // 获取可用优惠券
        await this.fetchAvailableCoupons()
      } catch (error) {
        this.$message.error('获取订单信息失败')
      }
    },
    async fetchAddressList() {
      try {
        const { data } = await getUserAddressList()
        this.addressList = data
        // 设置默认地址
        this.selectedAddress = data.find(addr => addr.isDefault) || data[0]
      } catch (error) {
        this.$message.error('获取地址列表失败')
      }
    },
    async fetchAvailableCoupons() {
      try {
        const { data } = await getAvailableCoupons()
        this.availableCoupons = data.filter(coupon => 
          parseFloat(this.totalPrice) >= parseFloat(coupon.useMinPrice)
        )
      } catch (error) {
        this.$message.error('获取优惠券失败')
      }
    },
    selectAddress(address) {
      this.selectedAddress = address
      this.showAddressList = false
    },
    selectCoupon(coupon) {
      this.selectedCoupon = coupon
      this.showCouponList = false
    },
    addNewAddress() {
      this.showAddressList = false
      this.$router.push('/user/address/add')
    },
    async submitOrder() {
      if (!this.selectedAddress) {
        this.$message.warning('请选择收货地址')
        return
      }
      
      try {
        this.submitting = true
        
        const orderData = {
          addressId: this.selectedAddress.id,
          couponId: this.selectedCoupon ? this.selectedCoupon.id : null,
          deliveryType: this.deliveryType,
          payType: this.payType,
          remark: this.remark
        }
        
        // 添加商品信息
        if (this.$route.query.cartIds) {
          orderData.cartIds = this.$route.query.cartIds
        } else if (this.$route.query.productId) {
          orderData.productId = this.$route.query.productId
          orderData.quantity = this.$route.query.quantity
          orderData.uniqueId = this.$route.query.uniqueId
        }
        
        const { data } = await createOrder(orderData)
        
        this.$message.success('订单创建成功')
        
        // 跳转到支付页面
        this.$router.push({
          path: '/order/pay',
          query: { orderId: data.orderId, orderSn: data.orderSn }
        })
      } catch (error) {
        this.$message.error('订单创建失败')
      } finally {
        this.submitting = false
      }
    }
  }
}
</script>

<style lang="scss" scoped>
.order-confirm {
  min-height: 100vh;
  background: #f5f5f5;
  padding: 20px 0;
}

.container {
  max-width: 1000px;
  margin: 0 auto;
  padding: 0 20px;
}

.page-header {
  margin-bottom: 20px;
  
  h2 {
    margin: 0;
    color: #333;
  }
}

.section {
  background: #fff;
  border-radius: 8px;
  margin-bottom: 20px;
  overflow: hidden;
  
  .section-title {
    display: flex;
    align-items: center;
    gap: 10px;
    padding: 20px;
    border-bottom: 1px solid #f0f0f0;
    font-weight: bold;
    color: #333;
    
    i {
      color: #409eff;
    }
  }
}

.address-section {
  .address-content {
    padding: 20px;
    
    .address-item {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 15px;
      border: 1px solid #e5e5e5;
      border-radius: 6px;
      cursor: pointer;
      
      &.selected {
        border-color: #409eff;
        background: #f0f8ff;
      }
      
      .address-info {
        flex: 1;
        
        .user-info {
          margin-bottom: 10px;
          
          .name {
            font-weight: bold;
            margin-right: 15px;
          }
          
          .phone {
            color: #666;
            margin-right: 15px;
          }
          
          .default-tag {
            background: #ff4757;
            color: #fff;
            padding: 2px 8px;
            border-radius: 10px;
            font-size: 12px;
          }
        }
        
        .address-detail {
          color: #666;
          line-height: 1.5;
        }
      }
    }
    
    .no-address {
      text-align: center;
      padding: 40px;
      color: #999;
      
      i {
        font-size: 24px;
        margin-bottom: 10px;
        display: block;
      }
    }
  }
}

.goods-section {
  .goods-list {
    .goods-item {
      display: flex;
      align-items: center;
      padding: 20px;
      border-bottom: 1px solid #f0f0f0;
      
      &:last-child {
        border-bottom: none;
      }
      
      img {
        width: 80px;
        height: 80px;
        object-fit: cover;
        border-radius: 4px;
        margin-right: 15px;
      }
      
      .goods-info {
        flex: 1;
        
        h4 {
          margin: 0 0 8px;
          font-size: 14px;
          line-height: 1.4;
        }
        
        .goods-specs {
          color: #999;
          font-size: 12px;
          margin-bottom: 8px;
        }
        
        .goods-price {
          color: #ff4757;
          font-weight: bold;
        }
      }
      
      .goods-total {
        font-size: 16px;
        font-weight: bold;
        color: #ff4757;
      }
    }
  }
}

.coupon-section {
  .coupon-content {
    padding: 20px;
    
    .coupon-selector {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 15px;
      border: 1px solid #e5e5e5;
      border-radius: 6px;
      cursor: pointer;
      
      &:hover {
        border-color: #409eff;
      }
      
      .placeholder {
        color: #999;
      }
    }
  }
}

.delivery-section,
.payment-section {
  .delivery-options,
  .payment-options {
    padding: 20px;
    
    .payment-item {
      margin-bottom: 15px;
      
      &:last-child {
        margin-bottom: 0;
      }
      
      .payment-info {
        display: flex;
        align-items: center;
        gap: 10px;
        
        .payment-icon {
          width: 24px;
          height: 24px;
          background-size: cover;
          
          &.wechat {
            background-color: #1aad19;
            border-radius: 4px;
          }
          
          &.alipay {
            background-color: #1677ff;
            border-radius: 4px;
          }
          
          &.balance {
            background-color: #ff4757;
            border-radius: 4px;
          }
        }
      }
    }
  }
}

.remark-section {
  padding: 20px;
}

.total-section {
  .total-list {
    padding: 20px;
    
    .total-item {
      display: flex;
      justify-content: space-between;
      margin-bottom: 10px;
      
      &.final {
        border-top: 1px solid #f0f0f0;
        padding-top: 10px;
        font-size: 16px;
        font-weight: bold;
        
        .amount {
          color: #ff4757;
          font-size: 18px;
        }
      }
      
      .discount {
        color: #ff4757;
      }
    }
  }
}

.submit-section {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  background: #fff;
  border-top: 1px solid #e5e5e5;
  padding: 20px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  
  .submit-info {
    .total-amount {
      font-size: 18px;
      font-weight: bold;
      
      span {
        color: #ff4757;
        font-size: 24px;
      }
    }
  }
  
  .el-button {
    min-width: 120px;
  }
}

// 弹窗样式
.address-list,
.coupon-list {
  max-height: 400px;
  overflow-y: auto;
  
  .address-item,
  .coupon-item {
    display: flex;
    align-items: center;
    padding: 15px;
    border-bottom: 1px solid #f0f0f0;
    cursor: pointer;
    
    &:hover {
      background: #f8f9fa;
    }
    
    &.selected {
      background: #f0f8ff;
    }
    
    &:last-child {
      border-bottom: none;
    }
  }
  
  .add-address,
  .no-coupon {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 10px;
    padding: 20px;
    border: 2px dashed #e5e5e5;
    border-radius: 6px;
    cursor: pointer;
    color: #666;
    
    &:hover {
      border-color: #409eff;
      color: #409eff;
    }
  }
}

.coupon-item {
  .coupon-left {
    width: 100px;
    text-align: center;
    margin-right: 15px;
    
    .coupon-price {
      font-size: 18px;
      font-weight: bold;
      color: #ff4757;
    }
    
    .coupon-condition {
      font-size: 12px;
      color: #999;
    }
  }
  
  .coupon-right {
    flex: 1;
    
    .coupon-title {
      font-weight: bold;
      margin-bottom: 5px;
    }
    
    .coupon-time {
      font-size: 12px;
      color: #999;
    }
  }
  
  .coupon-action {
    width: 30px;
    text-align: center;
    
    .el-icon-check {
      color: #409eff;
      font-size: 18px;
    }
  }
}

@media (max-width: 768px) {
  .container {
    padding: 0 10px;
  }
  
  .goods-item {
    flex-direction: column;
    align-items: flex-start;
    gap: 10px;
  }
  
  .submit-section {
    flex-direction: column;
    gap: 15px;
  }
}
</style>
</code_block_to_apply_changes_from>
</rewritten_file>